NAME
    Blosxom Plug-in: wikieditish

SYNOPSIS
    Edit a Blosxom blog wiki-style, from right in the browser.

INSTALLATION AND QUICK START
    Drop this wikieditish plug-in file into your plug-ins directory
    (whatever you set as $plugin_dir in blosxom.cgi).

    Wikieditish, being a well-behaved plug-in, won't do anything until you
    either set a password or turn off the password requirement (set
    $require_password = 0).

    Move the contents of the flavours folder included in this distribution
    into your Blosxom data directory (whatever you set as $datadir in
    blosxom.cgi). Don't move the folder itself, only the files it contains!
    If you don't have the the sample flavours handy, you can download them
    from:

    http://www.raelity.org/apps/blosxom/downloads/plugins/wikieditish.zip

    Point your browser at one of your Blosxom entries, specifying the
    wikieditish flavour (e.g.
    http://localhost/cgi-bin/blosxom.cgi/path/to/a/post.wikieditish)

    Edit the entry, supply your password (if required -- the default), and
    hit the Save button to save your changes.

    You can just as easily create a new blog entry by pointing your browser
    at a non-existent filename, potentially on a non-existent path (e.g.
    http://localhost/cgi-bin/blosxom.cgi/path/to/a/nonexistent_post.wikiedit
    ish). Give the entry a title and body, supply your password (again, if
    required), and hit the Save button. The wikieditish plug-in will create
    a new blog entry for you on your specified path, creating the supplied
    path's directory structure for you on the fly if necessary.

    Enjoy!

SAMPLE FLAVOUR TEMPLATES
    I've made sample flavour templates available to you to help with any
    learning curve this plug-in might require.

    Take a gander at the source HTML for:

    *   head.wiki, a basic head template -- nothing special.

    *   story.wiki, a basic story template -- nothing special.

    *   foot.wiki, a basic foot template just about like any other. The big
        difference is the "edit this blog" form for editing the current blog
        entry or creating a fresh one.

    NOTE: The wikieditish plug-in requires the presence of a "plugin" form
    variable with the value set to "wikieditish"; this tells the plug-in
    that it should handle the incoming POSTing data rather than leaving it
    for another plug-in.

FLAVOURING WIKIEDITISH
    While there's not much in the way of template variables and the sample
    foot.wikieditish provides about everything you'll need, here's a list of
    variables and their purposes for your reference:

    *   $wikieditish::title and $wikieditish::body prepopulate the form with
        the values from the existing blog entry file.

    *   $wikieditish::password is prepopulated with the password you just
        entered into and submitted in the "edit this blog" form or
        preferences stored in a 'wikieditish' cookie, if you've the cookie
        plug-in installed and enabled.

INVITING CONTRIBUTIONS
    The wikieditish plug-in serves dual purposes: as a browser-based editor
    for your Blosxom blog and as a wiki-style community blog, allowing
    contributions by a particular group of bloggers (using a shared
    password) or passers-by (without need of a password -- true Wiki-style).

    If you'd like to invite contribution, you can assocate an "edit" button
    with each entry like so:

    <a href="$url$path/$fn.wikieditish">edit this blog</a>

PRESERVING LAST MODIFIED DATE/TIME ON EDITED ENTRY
    The wikieditish plug-in can attempt to maintain the last modified
    date/time stamp on any blog entry you're editing. Otherwise, editing an
    entry will cause it to rise to the top of your blog like so much cream.

    I say "attempt" since this doesn't work on every operating system (it
    doesn't do any harm, though).

    To turn this feature on -- it's off by default -- set the
    $preserve_lastmodified variable to 1.

RESTRICTING BY PASSWORD
    By default, the wikieditish plug-in requires a password. You'll need to
    set one before being able to edit anything. Set the $blog_password
    configuration variable to anything you wish (e.g. my $blog_password =
    'abc123';). Just be sure to use something you'll remember and other's
    won't guess.

    You can disable password-protection if you wish, allowing passers-by to
    contribute to your blog, Wiki-style. Be sure this is something you want
    to do. It has some possible security implications, anyone being able to
    write to your server's hard drive, post to your public-facing blog, and
    edit (read: alter, spindle, contort) any blog postings. Those warning's
    out of the way, to turn off password-protection, set $require_password
    to 0.

RESTRICTING BY IP
    You can alternatively decide to restrict editing to a particular IP
    address or addresses -- those in your office, for example, or the
    machine actually running Blosxom (127.0.0.1).

    To do so, set $restrict_by_ip to 1 (it's off, or 0, by default), and
    populate the @ips array with a list of approved IP addresses. By
    default, this is set to "this machine", the machine running Blosxom;
    shorthand for "this machine" in IP-speak is 127.0.0.1. The following
    example restricts editing to those coming from three IPs, including
    127.0.0.1:

      # Should editing this blog be restricted to a particular set of IPs?
      # 0 = no (default), 1 = yes
      $restrict_by_ip = 1;

      # To what IPs should editing this blog be restricted?
      @ips = qw/ 127.0.0.1 10.0.0.3 140.101.22.10/;

    Of course, you can use a combination of password-protection and IP
    restriction if you so wish.

VERSION CONTROL
    This version of the wikieditish plugin includes rudimentary support for
    version control. It is diabled by default, to activate this behaviour,
    set the variable $version_control to a non-zero value.

    Whenever you edit (or revert, for that matter) an entry, the plugin will
    save the existing version into a file in the same folder as the "live"
    post, but with the file extension you specify with the
    $snapshot_extension variable.

    You can revert to a previous version by checking the box labelled
    "Disregard changes and revert to the last saved version". The reversion
    is triggered when the plugin sees a paramter of revert=yes.

VERSION
    2005-08-03

    Version number is the date on which this version of the plug-in was
    created.

AUTHORS
    Rael Dornfest <rael@oreilly.com>, http://www.raelity.org/ - created the
    original plugin

    Sam Pearson, http://sgp.me.uk/ - added version control

SEE ALSO
    The wikieditish plug-in plays nicely with the wikiwordish plug-in
    [http://www.raelity.org/apps/blosxom/plugins/text/wikiwordish.individual
    ] for wiki-style linking action. And for wiki-style markup, be sure to
    try the textile
    [http://www.raelity.org/apps/blosxom/plugins/text/textile.individual] or
    tiki [http://www.raelity.org/apps/blosxom/plugins/text/tiki.individual]
    plug-ins.

    Blosxom Home/Docs/Licensing: http://www.raelity.org/apps/blosxom/

    Blosxom Plugin Docs: http://www.raelity.org/apps/blosxom/plugin.shtml

    Version Control Release Notes:

BUGS
    Address bug reports and comments to the Blosxom mailing list
    [http://www.yahoogroups.com/group/blosxom].

LICENSE
    Blosxom and this Blosxom Plug-in Copyright 2003, Rael Dornfest

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

